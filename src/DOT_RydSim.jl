########################################################################
#                                                                      #
# DOT_RydSim.jl                                                        #
#                                                                      #
# (c) Dirk Oliver Theis 2023                                           #
#                                                                      #
# License:                                                             #
#                                                                      #
#             Apache 2.0                                               #
#                                                                      #
########################################################################

"""
Module `DOT_RydSim`

Quantum simulation of (small!!) arrays of Rydberg atoms.

# Exports

## General
* (nothing yet)

## Number definitions (in sub-modules `Numbers`๐ฅ๐ฆ๐ง)
* (also nothing)

# Sub-modules

Sub-module names are not exported.

* `Schrรถdinger` โ Simulation of quantum evolution
"""
module DOT_RydSim
export no_thing


# ***************************************************************************************************************************
# โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ 0. Packages

using DOT_NiceMath
using DOT_NiceMath.NumbersF64

using  Unitful: Quantity, ฮผs, ๐, Unit, FreeUnits
import Unitful

# ***************************************************************************************************************************
# โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ 1. Types & Units

const ฮผs_t{         REAL<:Real } = Quantity{REAL, ๐,                                                 # 1โ `ฮผs_t`
                                            FreeUnits{ (Unit{:Second,๐}(-6, 1//1),),
                                                       ๐,
                                                       nothing }
                                            }

const Rad_per_ฮผs_t{ REAL<:Real } = Quantity{REAL, ๐^(-1//1),                                         # 1โ `Rad_per_ฮผs_t`
                                            FreeUnits{ (Unit{:Second,๐}(-6,-1//1),),
                                                       ๐^(-1//1),
                                                       nothing }
                                            }



include("Schrรถdinger.mod.jl")






# ***************************************************************************************************************************
# โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ 2. Shots & Shooting

struct Halfint                                                                                      # 2โ struct `Halfint`
end

end # module DOT_RydSim
# EOF
